[{"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\index.js":"1","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\App.js":"2","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\context\\UserContext.js":"3","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\context\\LayoutContext.js":"4","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\themes\\index.js":"5","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\themes\\default.js":"6","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Layout\\Layout.js":"7","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\login\\Login.js":"8","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\login\\styles.js":"9","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Layout\\styles.js":"10","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\Dashboard.js":"11","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\Sidebar.js":"12","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Header\\Header.js":"13","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\notifications\\Notifications.js":"14","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\mock.js":"15","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\styles.js":"16","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\styles.js":"17","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Header\\styles.js":"18","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\notifications\\styles.js":"19","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\components\\Dot.js":"20","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"21","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\components\\Table\\Table.js":"22","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"23","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Widget\\Widget.js":"24","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\PageTitle\\PageTitle.js":"25","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Wrappers\\Wrappers.js":"26","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Notification\\Notification.js":"27","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\UserAvatar\\UserAvatar.js":"28","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"29","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"30","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Widget\\styles.js":"31","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\PageTitle\\styles.js":"32","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\UserAvatar\\styles.js":"33","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Notification\\styles.js":"34","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\RestTime.js":"35","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\images\\Images.js":"36","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\about-us\\AboutUs.js":"37","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\RestTimeDashboard.js":"38","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\RestTimeRules.js":"39","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\Services.js":"40","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\imgGallery\\ImgGallery.js":"41","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\components\\RestForm.js":"42","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\components\\RestTable.js":"43","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\services\\http.services.js":"44","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\services\\helpers.js":"45"},{"size":609,"mtime":1669730282053,"results":"46","hashOfConfig":"47"},{"size":1791,"mtime":1670011245804,"results":"48","hashOfConfig":"47"},{"size":2055,"mtime":1669988535153,"results":"49","hashOfConfig":"47"},{"size":1444,"mtime":1669725912196,"results":"50","hashOfConfig":"47"},{"size":534,"mtime":1669725912456,"results":"51","hashOfConfig":"47"},{"size":3310,"mtime":1669992469541,"results":"52","hashOfConfig":"47"},{"size":4634,"mtime":1670258568954,"results":"53","hashOfConfig":"47"},{"size":3411,"mtime":1670174731260,"results":"54","hashOfConfig":"47"},{"size":3281,"mtime":1669725912370,"results":"55","hashOfConfig":"47"},{"size":762,"mtime":1669999289701,"results":"56","hashOfConfig":"47"},{"size":14917,"mtime":1670098886841,"results":"57","hashOfConfig":"47"},{"size":4263,"mtime":1670096355739,"results":"58","hashOfConfig":"47"},{"size":10717,"mtime":1670098996990,"results":"59","hashOfConfig":"47"},{"size":13913,"mtime":1669725912392,"results":"60","hashOfConfig":"47"},{"size":4218,"mtime":1669725912300,"results":"61","hashOfConfig":"47"},{"size":3003,"mtime":1669725912308,"results":"62","hashOfConfig":"47"},{"size":1363,"mtime":1669725912150,"results":"63","hashOfConfig":"47"},{"size":4093,"mtime":1669725912064,"results":"64","hashOfConfig":"47"},{"size":1943,"mtime":1669725912406,"results":"65","hashOfConfig":"47"},{"size":902,"mtime":1669725912125,"results":"66","hashOfConfig":"47"},{"size":4589,"mtime":1669725912134,"results":"67","hashOfConfig":"47"},{"size":1675,"mtime":1669725912296,"results":"68","hashOfConfig":"47"},{"size":4184,"mtime":1669725912278,"results":"69","hashOfConfig":"47"},{"size":2596,"mtime":1669725912176,"results":"70","hashOfConfig":"47"},{"size":447,"mtime":1669725912098,"results":"71","hashOfConfig":"47"},{"size":3971,"mtime":1669725912190,"results":"72","hashOfConfig":"47"},{"size":3413,"mtime":1669725912086,"results":"73","hashOfConfig":"47"},{"size":620,"mtime":1669725912160,"results":"74","hashOfConfig":"47"},{"size":1476,"mtime":1669725912136,"results":"75","hashOfConfig":"47"},{"size":1075,"mtime":1669725912284,"results":"76","hashOfConfig":"47"},{"size":1015,"mtime":1669725912182,"results":"77","hashOfConfig":"47"},{"size":482,"mtime":1669725912104,"results":"78","hashOfConfig":"47"},{"size":291,"mtime":1669725912166,"results":"79","hashOfConfig":"47"},{"size":1061,"mtime":1669725912090,"results":"80","hashOfConfig":"47"},{"size":3429,"mtime":1670687243235,"results":"81","hashOfConfig":"47"},{"size":125,"mtime":1669745674486,"results":"82","hashOfConfig":"47"},{"size":128,"mtime":1669999886203,"results":"83","hashOfConfig":"47"},{"size":5700,"mtime":1670702120447,"results":"84","hashOfConfig":"47"},{"size":4720,"mtime":1670091299350,"results":"85","hashOfConfig":"47"},{"size":2486,"mtime":1670256657802,"results":"86","hashOfConfig":"47"},{"size":3829,"mtime":1670267483073,"results":"87","hashOfConfig":"47"},{"size":9093,"mtime":1670606313369,"results":"88","hashOfConfig":"47"},{"size":7426,"mtime":1672082870123,"results":"89","hashOfConfig":"47"},{"size":1469,"mtime":1670701790992,"results":"90","hashOfConfig":"47"},{"size":933,"mtime":1670690637017,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"jimzop",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\index.js",[],["196","197"],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\App.js",["198"],"import React from \"react\";\r\nimport {  Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Login from \"../pages/login\";\r\n\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\n\r\nexport default function App() {\r\n  // global\r\n  var { isAuthenticated } = useUserState();\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  // #######################################################################\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app/dashboard\" />} />\r\n        <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        />\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        <PublicRoute path=\"/login\" component={Login} />\r\n        \r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n\r\n}\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\context\\UserContext.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\context\\LayoutContext.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\themes\\index.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\themes\\default.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Layout\\Layout.js",["199","200"],"import React, { Suspense } from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link, Card } from \"@material-ui/core\";\r\nimport Icon from \"@mdi/react\";\r\n\r\n//icons\r\nimport {\r\n  mdiInstagram as InstagramIcon,\r\n  mdiTwitter as TwitterIcon,\r\n} from \"@mdi/js\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// pages\r\n\r\nconst Dashboard = React.lazy(() => import(\"../../pages/dashboard\"));\r\nconst RestTime = React.lazy(() => import(\"../../pages/rest-time/RestTime\"));\r\nconst RestTimeDashboard = React.lazy(() =>\r\n  import(\"../../pages/rest-time/RestTimeDashboard\"),\r\n);\r\nconst RestTimeRules = React.lazy(() =>\r\n  import(\"../../pages/rest-time/RestTimeRules\"),\r\n);\r\nconst AboutUs = React.lazy(() => import(\"../../pages/about-us/AboutUs\"));\r\nconst Services = React.lazy(() => import(\"../../pages/rest-time/Services\"));\r\nconst ImgGallery = React.lazy(() => import(\"../../pages/imgGallery/ImgGallery\"));\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Suspense\r\n              fallback={\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <CircularProgress size={70} />\r\n                </div>\r\n              }\r\n            >\r\n              <Route path=\"/app/dashboard\" component={Dashboard} />\r\n              <Route path=\"/app/rest-time/table\" component={RestTime} />\r\n              <Route path=\"/app/rest-time/dash\" component={RestTimeDashboard} />\r\n              <Route path=\"/app/rest-time/rules\" component={RestTimeRules} />\r\n              <Route path=\"/app/rest-time/services\" component={Services} />\r\n              <Route path=\"/app/gallery\" component={ImgGallery} />\r\n              <Route path=\"/app/about-us\" component={AboutUs} />\r\n            </Suspense>\r\n          </Switch>\r\n          <Box\r\n            mt={5}\r\n            width={\"100%\"}\r\n            display={\"flex\"}\r\n            alignItems={\"center\"}\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <div>\r\n              <Link\r\n                color={\"primary\"}\r\n                href={\"https://snappfood.com\"}\r\n                target={\"_blank\"}\r\n                className={classes.link}\r\n              >\r\n                اسنپ فود\r\n              </Link>\r\n              <Link\r\n                color={\"primary\"}\r\n                onClick={() => {\r\n                  props.history.push(\"/app/about-us\");\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                درباره ما\r\n              </Link>\r\n              <Link\r\n                color={\"primary\"}\r\n                onClick={() => {\r\n                  props.history.push(\"/app/gallery\");\r\n                }}\r\n                className={classes.link}\r\n              >\r\n                گالری تصاویر\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              <Link href={\"https://www.instagram.com\"} target={\"_blank\"}>\r\n                <IconButton aria-label=\"instagram\">\r\n                  <Icon path={InstagramIcon} size={1} color=\"#6E6E6E99\" />\r\n                </IconButton>\r\n              </Link>\r\n              <Link href={\"https://twitter.com\"} target={\"_blank\"}>\r\n                <IconButton aria-label=\"twitter\">\r\n                  <Icon path={TwitterIcon} size={1} color=\"#6E6E6E99\" />\r\n                </IconButton>\r\n              </Link>\r\n              {/* <Link href={\"\"} target={\"_blank\"}>\r\n                <IconButton aria-label=\"github\" style={{ marginRight: -12 }}>\r\n                  <Icon path={GithubIcon} size={1} color=\"#6E6E6E99\" />\r\n                </IconButton>\r\n              </Link> */}\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\login\\Login.js",["201"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [loginValue, setLoginValue] = useState(\"cts\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>Shatel CTS</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Fade in={error}>\r\n            <Typography color=\"secondary\" className={classes.errorMessage}>\r\n              ظاهرا مشکلی پیش آمده :(\r\n            </Typography>\r\n          </Fade>\r\n          <TextField\r\n            id=\"username\"\r\n            InputProps={{\r\n              classes: {\r\n                underline: classes.textFieldUnderline,\r\n                input: classes.textField,\r\n              },\r\n            }}\r\n            value={loginValue}\r\n            onChange={(e) => setLoginValue(e.target.value)}\r\n            margin=\"normal\"\r\n            placeholder=\"نام کاربری\"\r\n            type=\"text\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            InputProps={{\r\n              classes: {\r\n                underline: classes.textFieldUnderline,\r\n                input: classes.textField,\r\n              },\r\n            }}\r\n            value={passwordValue}\r\n            onChange={(e) => setPasswordValue(e.target.value)}\r\n            margin=\"normal\"\r\n            placeholder=\"رمز عبور\"\r\n            type=\"password\"\r\n            fullWidth\r\n          />\r\n          <div className={classes.formButtons}>\r\n            {isLoading ? (\r\n              <CircularProgress size={26} className={classes.loginLoader} />\r\n            ) : (\r\n              <Button\r\n                disabled={loginValue.length === 0 || passwordValue.length === 0}\r\n                onClick={() =>\r\n                  loginUser(\r\n                    userDispatch,\r\n                    loginValue,\r\n                    passwordValue,\r\n                    props.history,\r\n                    setIsLoading,\r\n                    setError,\r\n                  )\r\n                }\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={{ fontSize: \"18px\" }}\r\n              >\r\n                ورود\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Typography color=\"primary\" className={classes.copyright}>\r\n          © 2022 تمام حقوق برای{\" \"}\r\n          <a style={{ textDecoration: \"none\", color: \"inherit\" }}>RTIM</a> محفوظ\r\n          است\r\n        </Typography>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\login\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Layout\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\Dashboard.js",["202","203","204","205","206"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\n// import {\r\n//   ResponsiveContainer,\r\n//   ComposedChart,\r\n//   AreaChart,\r\n//   LineChart,\r\n//   Line,\r\n//   Area,\r\n//   PieChart,\r\n//   Pie,\r\n//   Cell,\r\n//   YAxis,\r\n//   XAxis,\r\n// } from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\n// import mock from \"./mock\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n// import Table from \"./components/Table/Table\";\r\n// import BigStat from \"./components/BigStat/BigStat\";\r\n\r\n// const mainChartData = getMainChartData();\r\n// const PieChartData = [\r\n//   { name: \"گروه A\", value: 400, color: \"primary\" },\r\n//   { name: \"گروه B\", value: 300, color: \"secondary\" },\r\n//   { name: \"گروه C\", value: 300, color: \"warning\" },\r\n//   { name: \"گروه D\", value: 200, color: \"success\" },\r\n// ];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  //var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"داشبورد\"\r\n        button={\r\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\r\n            <Typography weight=\"medium\" noWrap>\r\n              اخرین گزارشات\r\n            </Typography>\r\n          </Button>\r\n        }\r\n      />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"تایم استراحت امروزت\"\r\n            disableWidgetMenu\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={12}>\r\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                    12:30 - 13:00\r\n                  </Typography>\r\n                </Grid>\r\n                <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\r\n                  <Typography weight=\"medium\" noWrap>\r\n                    میخوام عوضش کنم\r\n                  </Typography>\r\n                </Button>\r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"گزارش\"\r\n            disableWidgetMenu\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  ...\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                ...\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                ...\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        {/* <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"سرور\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"تقسیم درآمد\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  نمودار روزانه  \r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      تبلت\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      موبایل\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      دسکتاب\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={e => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">روزانه</MenuItem>\r\n                  <MenuItem value=\"weekly\">هفتگی</MenuItem>\r\n                  <MenuItem value=\"monthly\">ماهانه</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={i => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid> */}\r\n        {/* {mock.bigStat.map(stat => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))} */}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            title=\"پشتیبانی درخواست ها\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\n// function getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n//   var array = new Array(length).fill();\r\n//   let lastValue;\r\n\r\n//   return array.map((item, index) => {\r\n//     let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n//     while (\r\n//       randomValue <= min ||\r\n//       randomValue >= max ||\r\n//       (lastValue && randomValue - lastValue > maxDiff)\r\n//     ) {\r\n//       randomValue = Math.floor(Math.random() * multiplier + 1);\r\n//     }\r\n\r\n//     lastValue = randomValue;\r\n\r\n//     return { value: randomValue };\r\n//   });\r\n// }\r\n\r\n// function getMainChartData() {\r\n//   var resultArray = [];\r\n//   var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n//   var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n//   var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n//   for (let i = 0; i < tablet.length; i++) {\r\n//     resultArray.push({\r\n//       tablet: tablet[i].value,\r\n//       desktop: desktop[i].value,\r\n//       mobile: mobile[i].value,\r\n//     });\r\n//   }\r\n\r\n//   return resultArray;\r\n// }\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\Sidebar.js",["207","208","209","210","211","212"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"داشبورد\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"تایم استراحت\",\r\n    icon: <TypographyIcon />,\r\n    children: [\r\n      { label: \"مشاهده زمانبندی\", link: \"/app/rest-time/table\" },\r\n      { label: \"قوانین\", link: \"/app/rest-time/rules\" },\r\n      { label: \"تنظیمات\", link: \"/app/rest-time/dash\" },\r\n      { label: \"خدمات\", link: \"/app/rest-time/services\" },\r\n    ],\r\n  },\r\n\r\n  // {\r\n  //   id: 4,\r\n  //   label: \"UI عناصر\",\r\n  //   link: \"/app/ui\",\r\n  //   icon: <UIElementsIcon />,\r\n  //   children: [\r\n  //     { label: \"آیکون ها\", link: \"/app/ui/icons\" },\r\n  //     { label: \"نمودارها\", link: \"/app/ui/charts\" },\r\n  //     { label: \"مقشه گوگل\", link: \"/app/ui/maps\" },\r\n  //   ],\r\n  // },\r\n  // { id: 5, type: \"divider\" },\r\n  // { id: 6, type: \"title\", label: \"راهنما\" },\r\n  // { id: 7, label: \"کتابخانه\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 8, label: \"پشتیبانی\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 9, label: \"پرسش و پاسخ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  // { id: 10, type: \"divider\" },\r\n  // { id: 11, type: \"title\", label: \"پروژه ها\" },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Header\\Header.js",["213","214","215","216","217","218"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  \r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowForward as ArrowForwardIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"سعید محمدیها\",\r\n    message: \"سلام چطوری\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"سعید محمدی\",\r\n    message: \"داشبود جدید من رو نگاه کن\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"علی محمدیها\",\r\n    message: \"میخوام برنامه ها رو تغییر بدم\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"ستاره محدی\",\r\n    message: \"خبرهای خوب از واحد فروش دارم\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"پیام ها\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"بهترین راه برای به دست آوردن...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"این یک نوتیفیکیشن ساده است\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 سفارش جدید امروز دریافت شد\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowForwardIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n            پشتیبانی فنی\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n        {/* <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"جست و جو...\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div> */}\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          // onClick={e => {\r\n          //   setNotificationsMenu(e.currentTarget);\r\n          //   setIsNotificationsUnread(false);\r\n          // }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n           <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n           \r\n          </Badge>\r\n          <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          // onClick={e => {\r\n          //   setMailMenu(e.currentTarget);\r\n          //   setIsMailsUnread(false);\r\n          // }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n           <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            \r\n          </Badge> \r\n          <MailIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              پیام های جدید\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} پیام های جدید\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            پیام جدید ارسال کن\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              سعید محمدیها\r\n            </Typography>\r\n            {/* <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"#\"\r\n            >\r\n              Flalogic.com\r\n            </Typography> */}\r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> پروفایل\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> وظایف\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> پیام ها\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              خروج\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\notifications\\Notifications.js",[],["219","220"],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Header\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Widget\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\components\\Notification\\styles.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\RestTime.js",["221","222","223"],"import { useState, useEffect } from \"react\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n  MenuItem,\r\n  Grid,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport RestTable from \"./components/RestTable\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst RestTime = () => {\r\n  const theme = useTheme()\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      date: \"\",\r\n      group: \"\",\r\n    },\r\n  })\r\n  return (\r\n    <>\r\n    <RestTable/>\r\n    <Grid lg={6} xs={12}>\r\n      <Widget disableWidgetMenu>\r\n        <Grid container direction=\"column\" spacing={4}>\r\n          <Grid item>\r\n            <Typography style={{ marginBottom: \"20px\" }}>جابجایی:</Typography>\r\n          </Grid>\r\n          <Grid item container spacing={2}>\r\n            <Grid item md={6} sm={6} xs={12}>\r\n              <FormControl\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                style={{\r\n                  direction: \"ltr\",\r\n                }}\r\n              >\r\n                <InputLabel color=\"secondary\" id=\"helper-lable\">\r\n                  <Typography>نام</Typography>\r\n                </InputLabel>\r\n                <Select\r\n                  color=\"secondary\"\r\n                  name=\"name\"\r\n                  labelId=\"helper-lable\"\r\n                  id=\"select\"\r\n                  value={formik.values.name}\r\n                  label=\"name\"\r\n                  onChange={formik.handleChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <Typography>...</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"شب\">\r\n                    <Typography>شام</Typography>\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={6} sm={6} xs={12}>\r\n              <FormControl\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                style={{\r\n                  direction: \"ltr\",\r\n                }}\r\n              >\r\n                <InputLabel color=\"secondary\" id=\"helper-lable\">\r\n                  <Typography>گروه</Typography>\r\n                </InputLabel>\r\n                <Select\r\n                  color=\"secondary\"\r\n                  name=\"group\"\r\n                  labelId=\"helper-lable\"\r\n                  id=\"select\"\r\n                  value={formik.values.group}\r\n                  label=\"group\"\r\n                  onChange={formik.handleChange}\r\n                >\r\n                  <MenuItem value=\"ظهر\">\r\n                    <Typography>ناهار</Typography>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"شب\">\r\n                    <Typography>شام</Typography>\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item align=\"left\">\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{\r\n                backgroundColor: theme.palette.warning.dark,\r\n                color: theme.palette.common.white,\r\n              }}\r\n            >\r\n              <Typography>ثبت</Typography>\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Widget>\r\n    </Grid>\r\n    </>\r\n  )\r\n};\r\nexport default RestTime;\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\images\\Images.js",["224"],"import react from 'react'\r\n\r\nconst Images = ()=>{\r\n    return (\r\n        <div>images</div>\r\n    )\r\n}\r\n\r\nexport default Images",["225","226"],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\about-us\\AboutUs.js",["227"],"import react from 'react'\r\n\r\nconst AboutUs = ()=>{\r\n    return (\r\n        <div>abou us</div>\r\n    )\r\n}\r\n\r\nexport default AboutUs","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\RestTimeDashboard.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\RestTimeRules.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\Services.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\imgGallery\\ImgGallery.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\components\\RestForm.js",["228","229","230"],"import {\r\n    Grid,\r\n    Checkbox,\r\n    FormControl,\r\n    FormControlLabel,\r\n    InputLabel,\r\n    makeStyles,\r\n    MenuItem,\r\n    Select,\r\n    Typography,\r\n    Button,\r\n    CircularProgress,\r\n    TextField,\r\n    useTheme,\r\n    IconButton,\r\n  } from \"@material-ui/core\";\r\n  import { useFormik } from \"formik\";\r\n  import { useState } from \"react\";\r\n  import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\n  \r\n  const useStyle = makeStyles((theme) => ({\r\n    card: {\r\n      minHeight: \"auto\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  }));\r\n  \r\n  const RestForm = ({setStatus}) => {\r\n    const [file, setFile] = useState(null);\r\n    const [btnLoading, setBtnLoading] = useState(true);\r\n    const [subLoading, setSubLoading] = useState(true);\r\n    const theme = useTheme();\r\n    const classes = useStyle();\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        sutableNoon: false,\r\n        time: \"ظهر\",\r\n        balacne: false,\r\n        emptyGroups: false,\r\n        loginsShift: false,\r\n        loginsResponsibility: false,\r\n        offlinesshift: false,\r\n        offlinesResponsibility: false,\r\n      },\r\n    });\r\n  \r\n    /**\r\n     * uploading file to sever\r\n     */\r\n    const handleUpload = () => {\r\n      //file upload\r\n      // setBtnLoading(true)\r\n      //axios.post().then(()=>{setBtnLoading(false)}).catch(()=>{setBtnLoading(false)})\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <PageTitle title=\"چیدمان زمان استراحت\" />\r\n        <Grid container spacing={4} direction=\"column\">\r\n          <Grid item lg={6} md={12}>\r\n            <Widget disableWidgetMenu className={classes.card}>\r\n              <Typography>آپلود شیفت</Typography>\r\n              <Grid container>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  color=\"secondary\"\r\n                  component=\"label\"\r\n                >\r\n                  <Typography>انتخاب فایل</Typography>\r\n  \r\n                  <input\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(e) => {\r\n                      console.log(e.target.files[0]);\r\n                      setFile(e.target.files[0]);\r\n                    }}\r\n                  />\r\n                </Button>\r\n                {file ? (\r\n                  <>\r\n                    <Typography style={{ marginRight: \"5px\" }}>\r\n                      {file ? file.name : null}\r\n                    </Typography>\r\n                    <IconButton color=\"primary\" onClick={()=>setFile(null)}>\r\n                      <DeleteForeverIcon />\r\n                    </IconButton>\r\n                  </>\r\n  \r\n                ) : null}\r\n              </Grid>\r\n  \r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                disabled={file ? false : true}\r\n                style={{ marginTop: \"20px\" }}\r\n                onClick={handleUpload}\r\n              >\r\n                {btnLoading ? (\r\n                  <>\r\n                    <Typography>آپلود فایل</Typography>\r\n                    <CircularProgress size={15} style={{ color: \"white\" }} />\r\n                  </>\r\n                ) : (\r\n                  <Typography>آپلود فایل</Typography>\r\n                )}\r\n              </Button>\r\n            </Widget>\r\n          </Grid>\r\n          <Grid item lg={6} md={12}>\r\n            <Widget disableWidgetMenu upperTitle>\r\n              <Grid container direction=\"column\" spacing={2}>\r\n                <Grid item>\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    style={{\r\n                      width: \"150px\",\r\n                      direction: \"ltr\",\r\n                      marginRight: \"28px\",\r\n                    }}\r\n                  >\r\n                    <InputLabel color=\"secondary\" id=\"helper-lable\">\r\n                      <Typography>وعده</Typography>\r\n                    </InputLabel>\r\n                    <Select\r\n                      color=\"secondary\"\r\n                      name=\"time\"\r\n                      labelId=\"helper-lable\"\r\n                      id=\"select\"\r\n                      value={formik.values.time}\r\n                      label=\"time\"\r\n                      onChange={formik.handleChange}\r\n                    >\r\n                      <MenuItem value=\"ظهر\">\r\n                        <Typography>ناهار</Typography>\r\n                      </MenuItem>\r\n                      <MenuItem value=\"شب\">\r\n                        <Typography>شام</Typography>\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={formik.values.balacne} />}\r\n                    label=\"استراحت مناسب شیفت ظهر\"\r\n                    name=\"sutableNoon\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={formik.values.balacne} />}\r\n                    label=\"چیدن در گروه با تعداد نفرات برابر \"\r\n                    name=\"balacne\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={formik.values.balacne} />}\r\n                    label=\"متعادل کردن گروه های استراحت\"\r\n                    name=\"balacne\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={formik.values.emptyGroups} />}\r\n                    label=\"نمایش گروه های استراحت خالی\"\r\n                    name=\"emptyGroups\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={formik.values.loginsShift} />}\r\n                    label=\"نمایش شیفت افراد لاگین\"\r\n                    name=\"loginsShift\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox checked={formik.values.loginsResponsibility} />\r\n                    }\r\n                    label=\"نمایش مسئولیت افراد لاگین\"\r\n                    name=\"loginsResponsibility\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={<Checkbox checked={formik.values.offlinesshift} />}\r\n                    label=\"نمایش شیفت افراد لاگاف\"\r\n                    name=\"offlinesshift\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox checked={formik.values.offlinesResponsibility} />\r\n                    }\r\n                    label=\" نمایش مسئولیت افراد لاگاف\"\r\n                    name=\"offlinesResponsibility\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    style={{\r\n                      width: \"150px\",\r\n                      direction: \"ltr\",\r\n                      marginRight: \"28px\",\r\n                    }}\r\n                    id=\"outlined-number\"\r\n                    label={<Typography>ظرفیت آزاد</Typography>}\r\n                    type=\"number\"\r\n                  />\r\n                </Grid>\r\n                <Grid item align=\"left\">\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={()=>{setStatus('table')}}>\r\n                    {subLoading ? (\r\n                      <>\r\n                        <Typography>تایید</Typography>\r\n                        <CircularProgress size={15} style={{ color: \"white\" }} />\r\n                      </>\r\n                    ) : (\r\n                      <Typography>تایید</Typography>\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Widget>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default RestForm;\r\n  ","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\pages\\rest-time\\components\\RestTable.js",["231","232","233","234","235","236","237","238","239","240","241"],"import { useState, useEffect } from \"react\";\r\n\r\nimport * as shamsi from \"shamsi-date-converter\";\r\nimport PN from \"persian-number\";\r\nimport MOCK_DATA from '../MOCK_DATA'\r\nimport {\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  Zoom,\r\n  withStyles,\r\n  CircularProgress,\r\n  TableContainer,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport { getRest } from \"../../../services/http.services\";\r\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../../components/Widget/Widget\";\r\nimport { columnsDetector } from \"../../../services/helpers\";\r\n//creating a custom Tooltip\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    color: theme.palette.common.white,\r\n  },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  center: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  table: {\r\n    minWidth: \"800px\",\r\n  },\r\n  tableHead: {\r\n    fontSize: \".75rem\",\r\n    border: \"2px solid white\",\r\n    borderRadius: \"10px\",\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n  },\r\n\r\n  logins: {\r\n    fontSize: \".8rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"3px\",\r\n    borderRadius: \"16px\",\r\n    \"&:nth-child(even)\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light,\r\n      color: theme.palette.common.white,\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  offlines: {\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n}));\r\n\r\nconst RestTable = () => {\r\n  const [data, setData] = useState(MOCK_DATA);\r\n  const [date, setDate] = useState();\r\n  const [colomns, setColumns] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState();\r\n  const classes = useStyles();\r\n\r\n  // useEffect(() => {\r\n  //   getRest()\r\n  //     .then((response) => {\r\n  //       if (response.data.length == 0) {\r\n  //         const thisHour = new Date().getHours();\r\n  //         if (thisHour >= 10 || thisHour <= 12) {\r\n  //           setMessage(\r\n  //             \"زمان بندی استراحت توسط سرشیفت تایید نشده است لطفا بازه دیگری مراجعه نمایید...\",\r\n  //           );\r\n  //         }\r\n  //         if (thisHour >= 17 || thisHour <= 19) {\r\n  //           setMessage(\r\n  //             \"زمان بندی استراحت توسط سرشیفت تایید نشده است لطفا بازه دیگری مراجعه نمایید...\",\r\n  //           );\r\n  //         } else {\r\n  //           if (data == null) {\r\n  //             if (thisHour >= 10 || thisHour <= 12) {\r\n  //               {\r\n  //                 setMessage(\r\n  //                   \"زمان بندی استراحت توسط سرشیفت تایید نشده است لطفا به سرشیفت مراجعه نمایید...\",\r\n  //                 );\r\n  //               }\r\n  //               if (thisHour >= 17 || thisHour <= 19) {\r\n  //                 setMessage(\r\n  //                   \"زمان بندی استراحت توسط سرشیفت تایید نشده است لطفا بازه دیگری مراجعه نمایید...\",\r\n  //                 );\r\n  //               }\r\n  //             } else {\r\n  //               setMessage(\r\n  //                 \"در این بازه، زمان بندی استراحتی در نظر گرفته نشده است.\",\r\n  //               );\r\n  //             }\r\n  //             setIsLoading(false);\r\n  //           }\r\n  //         }\r\n  //       } else {\r\n  //         setData(response.data);\r\n  //         setColumns(columnsDetector(response.data));\r\n  //         const englishNumber = shamsi\r\n  //           .gregorianToJalali(response.data[0].Date)\r\n  //           .join(\"/\");\r\n  //         const persianNumber = PN.convertEnToPe(englishNumber);\r\n  //         setDate(persianNumber);\r\n  //         setIsLoading(false);\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //       setMessage(\r\n  //         \"اطلاعات از سرور آرتیم دریافت نشد.لطفا مشکل جهت پیگیری به سرشیفت ارجاع داده شود ... \",\r\n  //       );\r\n  //       setIsLoading(false);\r\n  //     });\r\n  // }, []);\r\n\r\n  const table = (\r\n    <>\r\n      <PageTitle title={`زمان استراحت ${date ? date : \"\"}`} />\r\n      <Grid md={12}>\r\n        <Widget disableWidgetMenu upperTitle>\r\n          <TableContainer style={{ overflowX: \"auto\" }}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {colomns?.map((group) => {\r\n                    return (\r\n                      <TableCell key={group.id} className={classes.tableHead}>\r\n                        <Typography variant=\"p\" color=\"text\">\r\n                          {group.StartTime} - {group.EndTime} (گروه{\" \"}\r\n                          {group.Number})\r\n                        </Typography>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data?.map((group) => {\r\n                  if (group.StartTime !== null) {\r\n                    return (\r\n                      <TableCell>\r\n                        {group.Logins?.map((person) => {\r\n                          return (\r\n                            <TableCell className={classes.logins}>\r\n                              {person.LastName}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                        {group.Offlines.map((person) => {\r\n                          return (\r\n                            <TableCell\r\n                              className={classNames(\r\n                                classes.logins,\r\n                                classes.offlines,\r\n                              )}\r\n                            >\r\n                              <LightTooltip\r\n                                TransitionComponent={Zoom}\r\n                                arrow\r\n                                placement=\"top\"\r\n                                title={\r\n                                  <Typography color=\"text\">\r\n                                    {person.ResponsibilityName}\r\n                                  </Typography>\r\n                                }\r\n                              >\r\n                                <span>{person.LastName}</span>\r\n                              </LightTooltip>\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableCell>\r\n                    );\r\n                  }\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Widget>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  const messageView = (\r\n    <div className={classes.center}>\r\n      <Typography>{message}</Typography>\r\n    </div>\r\n  );\r\n  const loading = (\r\n    <div className={classes.center}>\r\n      <CircularProgress size={70} />\r\n    </div>\r\n  );\r\n\r\n  return isLoading ? loading : data ? table : messageView;\r\n};\r\nexport default RestTable;\r\n","C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\services\\http.services.js",[],"C:\\Users\\s_mohammadiha\\Desktop\\super app\\rtl-material-admin-panel\\src\\services\\helpers.js",[],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":2,"column":36,"nodeType":"248","messageId":"249","endLine":2,"endColumn":49},{"ruleId":"246","severity":1,"message":"250","line":2,"column":25,"nodeType":"248","messageId":"249","endLine":2,"endColumn":33},{"ruleId":"246","severity":1,"message":"251","line":4,"column":33,"nodeType":"248","messageId":"249","endLine":4,"endColumn":37},{"ruleId":"252","severity":1,"message":"253","line":103,"column":11,"nodeType":"254","endLine":103,"endColumn":67},{"ruleId":"246","severity":1,"message":"255","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":25},{"ruleId":"246","severity":1,"message":"256","line":5,"column":3,"nodeType":"248","messageId":"249","endLine":5,"endColumn":9},{"ruleId":"246","severity":1,"message":"257","line":6,"column":3,"nodeType":"248","messageId":"249","endLine":6,"endColumn":16},{"ruleId":"246","severity":1,"message":"258","line":7,"column":3,"nodeType":"248","messageId":"249","endLine":7,"endColumn":11},{"ruleId":"246","severity":1,"message":"259","line":47,"column":7,"nodeType":"248","messageId":"249","endLine":47,"endColumn":12},{"ruleId":"246","severity":1,"message":"260","line":5,"column":24,"nodeType":"248","messageId":"249","endLine":5,"endColumn":41},{"ruleId":"246","severity":1,"message":"261","line":7,"column":17,"nodeType":"248","messageId":"249","endLine":7,"endColumn":31},{"ruleId":"246","severity":1,"message":"262","line":8,"column":16,"nodeType":"248","messageId":"249","endLine":8,"endColumn":25},{"ruleId":"246","severity":1,"message":"263","line":9,"column":21,"nodeType":"248","messageId":"249","endLine":9,"endColumn":32},{"ruleId":"246","severity":1,"message":"264","line":10,"column":19,"nodeType":"248","messageId":"249","endLine":10,"endColumn":30},{"ruleId":"246","severity":1,"message":"265","line":11,"column":18,"nodeType":"248","messageId":"249","endLine":11,"endColumn":25},{"ruleId":"246","severity":1,"message":"266","line":17,"column":13,"nodeType":"248","messageId":"249","endLine":17,"endColumn":23},{"ruleId":"246","severity":1,"message":"267","line":27,"column":29,"nodeType":"248","messageId":"249","endLine":27,"endColumn":35},{"ruleId":"246","severity":1,"message":"268","line":102,"column":23,"nodeType":"248","messageId":"249","endLine":102,"endColumn":39},{"ruleId":"246","severity":1,"message":"269","line":104,"column":31,"nodeType":"248","messageId":"249","endLine":104,"endColumn":55},{"ruleId":"246","severity":1,"message":"270","line":106,"column":8,"nodeType":"248","messageId":"249","endLine":106,"endColumn":20},{"ruleId":"246","severity":1,"message":"271","line":106,"column":22,"nodeType":"248","messageId":"249","endLine":106,"endColumn":35},{"ruleId":"242","replacedBy":"272"},{"ruleId":"244","replacedBy":"273"},{"ruleId":"246","severity":1,"message":"255","line":1,"column":10,"nodeType":"248","messageId":"249","endLine":1,"endColumn":18},{"ruleId":"246","severity":1,"message":"274","line":1,"column":20,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"275","line":19,"column":7,"nodeType":"248","messageId":"249","endLine":19,"endColumn":16},{"ruleId":"246","severity":1,"message":"276","line":1,"column":8,"nodeType":"248","messageId":"249","endLine":1,"endColumn":13},{"ruleId":"242","replacedBy":"277"},{"ruleId":"244","replacedBy":"278"},{"ruleId":"246","severity":1,"message":"276","line":1,"column":8,"nodeType":"248","messageId":"249","endLine":1,"endColumn":13},{"ruleId":"246","severity":1,"message":"279","line":33,"column":24,"nodeType":"248","messageId":"249","endLine":33,"endColumn":37},{"ruleId":"246","severity":1,"message":"280","line":34,"column":24,"nodeType":"248","messageId":"249","endLine":34,"endColumn":37},{"ruleId":"246","severity":1,"message":"259","line":35,"column":11,"nodeType":"248","messageId":"249","endLine":35,"endColumn":16},{"ruleId":"246","severity":1,"message":"274","line":1,"column":20,"nodeType":"248","messageId":"249","endLine":1,"endColumn":29},{"ruleId":"246","severity":1,"message":"281","line":3,"column":13,"nodeType":"248","messageId":"249","endLine":3,"endColumn":19},{"ruleId":"246","severity":1,"message":"282","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":10},{"ruleId":"246","severity":1,"message":"283","line":22,"column":10,"nodeType":"248","messageId":"249","endLine":22,"endColumn":17},{"ruleId":"246","severity":1,"message":"284","line":25,"column":10,"nodeType":"248","messageId":"249","endLine":25,"endColumn":25},{"ruleId":"246","severity":1,"message":"285","line":74,"column":16,"nodeType":"248","messageId":"249","endLine":74,"endColumn":23},{"ruleId":"246","severity":1,"message":"286","line":75,"column":16,"nodeType":"248","messageId":"249","endLine":75,"endColumn":23},{"ruleId":"246","severity":1,"message":"287","line":76,"column":19,"nodeType":"248","messageId":"249","endLine":76,"endColumn":29},{"ruleId":"246","severity":1,"message":"288","line":77,"column":21,"nodeType":"248","messageId":"249","endLine":77,"endColumn":33},{"ruleId":"246","severity":1,"message":"289","line":78,"column":19,"nodeType":"248","messageId":"249","endLine":78,"endColumn":29},{"ruleId":"290","severity":1,"message":"291","line":158,"column":36,"nodeType":"292","messageId":"293","endLine":158,"endColumn":38},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Card' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'MenuItem' is defined but never used.","'theme' is assigned a value but never used.","'NotificationsIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Button' is defined but never used.","'setIsMailsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.",["294"],["295"],"'useEffect' is defined but never used.","'useStyles' is assigned a value but never used.","'react' is defined but never used.",["294"],["295"],"'setBtnLoading' is assigned a value but never used.","'setSubLoading' is assigned a value but never used.","'shamsi' is defined but never used.","'PN' is defined but never used.","'getRest' is defined but never used.","'columnsDetector' is defined but never used.","'setData' is assigned a value but never used.","'setDate' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","'setMessage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]